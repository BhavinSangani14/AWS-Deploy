name: Deploy AWS Resources

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARTIFACT_BUCKET: "artifacts-cft-deploy"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Change this to your desired AWS region

      - name: Upload Templates to S3
        run: |
          aws s3 cp ./templates s3://${{ env.ARTIFACT_BUCKET }}/templates/ --recursive

      - name: Set unique ChangeSet name
        id: set-changeset-name
        run: echo "CHANGESET_NAME=changeset$(date +'%Y%m%d%H%M%S')${{ github.run_id }}" >> $GITHUB_ENV

      - name: Create Change Set
        run: |
          aws cloudformation create-change-set \
            --stack-name Deploy-Resource \
            --template-url https://artifacts-cft-deploy.s3.ap-south-1.amazonaws.com/templates/sam_template.yml \
            --change-set-name $CHANGESET_NAME \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Wait for ChangeSet to be Available
        run: |
          while true; do
            status=$(aws cloudformation describe-change-set --change-set-name $CHANGESET_NAME --stack-name Deploy-Resource --query "Status" --output text)
            if [ "$status" == "CREATE_COMPLETE" ]; then
              break
            elif [ "$status" == "FAILED" ]; then
              echo "ChangeSet creation failed. Aborting."
              exit 1
            else
              echo "ChangeSet status is $status. Waiting for completion..."
              sleep 30  
            fi
          done

      - name: Execute Change Set
        run: |
          aws cloudformation execute-change-set \
            --stack-name Deploy-Resource \
            --change-set-name $CHANGESET_NAME

      - name: Wait for Stack Execution to Complete
        run: |
          while true; do
            status=$(aws cloudformation describe-stacks --stack-name Deploy-Resource --query "Stacks[0].StackStatus" --output text)
            if [ "$status" == "UPDATE_COMPLETE" ]; then
              break
            elif [ "$status" == "UPDATE_ROLLBACK_COMPLETE" ]; then
              echo "Stack execution failed. Aborting."
              exit 1
            else
              echo "Stack status is $status. Waiting for completion..."
              sleep 30  # Adjust the polling interval as needed
            fi
          done
